#=================================================
# https://github.com/P3TERX/Actions-OpenWrt
# Description: Build OpenWrt using GitHub Actions
# Lisence: MIT
# Author: P3TERX
# Blog: https://p3terx.com
#=================================================

name: Build Aria2-android

on:
#  release:
#    types: [published]
#  push:
#    branches:
#      - master
#    paths:
#      - 'x64.sh'
  schedule:
    - cron: 0 1 3 * *
  watch:
    types: [started]

env:
  SSH_ACTIONS: false
  UPLOAD_BIN_DIR: true
  GITHUB_REPO: jsda/aria2-android
  NDK_VER: android-ndk-r21d-linux-x86_64.zip
  TZ: Asia/Taipei

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@master

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install build-essential git curl ca-certificates \
        libxml2-dev libcppunit-dev autoconf automake autotools-dev autopoint libtool pkg-config zip

    - name: SSH connection to Actions
      uses: jsda/debugger-action@master
      if: env.SSH_ACTIONS == 'true'

    - name: Organize files
      run: |
        echo "======================="
        git clone -b master --depth 1 https://github.com/aria2/aria2
        git clone -b master --depth 1 https://github.com/c-ares/c-ares
        git clone -b master --depth 1 https://github.com/libexpat/libexpat
        git clone -b master --depth 1 https://github.com/madler/zlib
        git clone -b OpenSSL_1_1_1-stable --depth 1 https://github.com/openssl/openssl
        git clone -b master --depth 1 https://github.com/libssh2/libssh2
        wget -q https://dl.google.com/android/repository/$NDK_VER
        unzip -q $NDK_VER
        rm -rf $NDK_VER
        cd android-ndk-*
        export ANDROID_NDK_HOME=$PWD
        cd ..
        export PATH=$ANDROID_NDK_HOME/toolchains/llvm/prebuilt/linux-x86_64/bin:$PATH
        export SILENT=true
        ./build_all.sh
        cd ..
        echo "Space usage:"
        echo "======================="
        echo "$(df -h)"
        echo "======================="
        echo "$PWD"
        echo "======================="
        echo "$(ls -fl $PWD)"
        echo "======================="
        echo "$(ls -fl $INSTALL_DIR)"
        echo "======================="
        find $INSTALL_DIR/armeabi-v7a/* -maxdepth 3 -name "aria2c" | xargs -i cp -a {} ./ && zip -9 -r aria2-armeabi-v7a.zip ./aria2c && rm -rf aria2c && echo "armeabi-v7a拷贝成功" || echo "armeabi-v7a拷贝失败"
        find $INSTALL_DIR/arm64-v8a/* -maxdepth 3 -name "aria2c" | xargs -i cp -a {} ./ && zip -9 -r aria2-arm64-v8a.zip ./aria2c && rm -rf aria2c && echo "arm64-v8a拷贝成功" || echo "arm64-v8a拷贝失败"
        find $INSTALL_DIR/x86/* -maxdepth 3 -name "aria2c" | xargs -i cp -a {} ./ && zip -9 -r aria2-x86.zip ./aria2c && rm -rf aria2c && echo "x86拷贝成功" || echo "x86拷贝失败"
        find $INSTALL_DIR/x86_64/* -maxdepth 3 -name "aria2c" | xargs -i cp -a {} ./ && zip -9 -r aria2-x86_64.zip ./aria2c && rm -rf aria2c && echo "x86_64拷贝成功" || echo "x86_64拷贝失败"
        mkdir -p aria2build
        mv aria2-*.zip aria2build
        echo "::set-env name=DATE::$(date "+%Y%m%d-%H%M")"

    - name: Upload Packages
      id: upload_packages
      if: success()
      env:
        GITHUB_TOKEN: ${{ secrets.TOKEN }}
      run: |
        cd aria2build
        git init
        git config user.name "actions"
        git config user.email "actions@github.com"
        git add .
        git commit -m "$DATE"
        git push --force --quiet "https://$GITHUB_TOKEN@github.com/$GITHUB_REPO.git" HEAD:Build
